<?xml version="1.0" encoding="UTF-8"?>

<!-- Define bibliotecas(tags) usadas na página -->
<!-- Pode se usar elementos HTML padrão misturados com os JSF e Primefaces sem problemas -->
<!-- As tags ui, h e f são do JSF -->
<!-- ui são para elementos de organização (templates) e automatização (laços e condicionais) -->
<!-- h são reimplementações de elementos HTML padrão que fornecem algumas funções/facilidades adicionais -->
<!-- f são para comunicação/transmição de parâmetros entre páginas e para controle de requisições AJAX -->
<!-- A tag p são do Primefaces, ela reimplementa as tags h com ainda mais funcionalidades e fornece tags adicionais com recursos avançados de Javascript e CSS embutidos -->
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	template="/WEB-INF/templates/default.xhtml">

	<!-- Usado para definir uso do Template -->
	<!-- O template só serve para uma melhor organização do código e para evitar a repetição de código -->
	<ui:define name="content">

		<!-- Define formulário para Dialogs (elementos estilo Pop-up) -->
		<!-- Lembre-se que o uso de formulários só não é necessário para elementos que são estáticos (sem ação, animação, conteúdo dinâmico) -->
		<h:form id="dialogs">
			<p:growl id="messages" />
			<p:dialog header="Novo Cliente" showEffect="fade" modal="true"
				widgetVar="clienteDialog" responsive="true">
				<p:outputPanel id="cliente-conteudo-dialog" class="ui-fluid">
					<p:outputPanel
						rendered="#{not empty cadastroClienteController.cliente}">
						<div class="field">
							<p:outputLabel for="nome">Nome</p:outputLabel>
							<p:inputText id="nome"
								value="#{cadastroClienteController.cliente.nomeCliente}"
								required="true" />
						</div>
						<div class="field">
							<p:outputLabel for="tpPessoa" value="Tipo Pessoa:" />
							<p:selectOneRadio id="tpPessoa"
								value="#{cadastroClienteController.cliente.tpPessoa}"
								unselectable="true">
								<f:selectItem itemLabel="Física" itemValue="F" />
								<f:selectItem itemLabel="Jurídica" itemValue="J" />
							</p:selectOneRadio>
						</div>
						<div class="field">
							<p:outputLabel for="cpfcnpj">CPF/CNPJ</p:outputLabel>
							<p:inputText id="cpfcnpj"
								value="#{cadastroClienteController.cliente.cpfCnpj}"
								required="true" />
						</div>
						<div class="field">
							<p:outputLabel for="telefone">Telefone</p:outputLabel>
							<p:inputText id="telefone"
								value="#{cadastroClienteController.cliente.telefone}"
								required="false" />
						</div>
						<div class="field">
							<p:outputLabel for="logradouro">Logradouro</p:outputLabel>
							<p:inputText id="logradouro"
								value="#{cadastroClienteController.cliente.logradouro}"
								required="false" />
						</div>
						<div class="field">
							<p:outputLabel for="nrResidencial">NrºResidencial</p:outputLabel>
							<p:inputText id="nrResidencial"
								value="#{cadastroClienteController.cliente.nrResidencial}"
								required="false" />
						</div>
						<div class="field">
							<p:outputLabel for="email">E-mail</p:outputLabel>
							<p:inputText id="email"
								value="#{cadastroClienteController.cliente.email}"
								required="true" />
						</div>
						<div class="field">
							<p:outputLabel for="bairro">Bairro</p:outputLabel>
							<p:selectOneMenu id="bairro"
								value="#{cadastroClienteController.cliente.bairro}"
								required="true"
								converter="BairroConverter">
								<f:selectItems
									value="#{cadastroBairroController.listaBairros}"
									var="bairro"
									itemLabel="#{bairro.nomeBairro.concat(' ').concat(bairro.cidade.nomeCidade)}"
									itemValue="#{bairro}" />
							</p:selectOneMenu>
						</div>
					</p:outputPanel>
				</p:outputPanel>

				<f:facet name="footer">
					<p:commandButton value="Salvar" icon="pi pi-check"
						actionListener="#{cadastroClienteController.salvar}"
						update="cliente-conteudo-dialog dialogs:messages"
						process="cliente-conteudo-dialog @this" />
					<p:commandButton value="Cancelar" icon="pi pi-times"
						onclick="PF('clienteDialog').hide()" class="ui-button-secondary"
						type="button" />
				</f:facet>
			</p:dialog>

			<p:confirmDialog widgetVar="removerClienteDialog" showEffect="fade"
				width="300" message="Desejar remover este cliente?" header="Confirm"
				severity="warn">
				<p:commandButton value="Sim" icon="pi pi-check"
					actionListener="#{cadastroClienteController.remover}"
					process="@this" oncomplete="PF('removerClienteDialog').hide()" />
				<p:commandButton value="Não" type="button"
					styleClass="ui-button-secondary" icon="pi pi-times"
					onclick="PF('removerClienteDialog').hide()" />
			</p:confirmDialog>

		</h:form>

		<!-- Define formulário principal -->
		<h:form id="form">
			<p:growl id="messages" showDetail="true" />

			<p:toolbar>
				<p:toolbarGroup>
					<p:commandButton value="Novo Cliente" icon="pi pi-plus"
						actionListener="#{cadastroClienteController.novoCliente}"
						update=":dialogs:cliente-conteudo-dialog"
						oncomplete="PF('clienteDialog').show()"
						styleClass="ui-button-raised" style="margin-right: .5rem">
						<p:resetInput target=":dialogs:cliente-conteudo-dialog" />
					</p:commandButton>
				</p:toolbarGroup>
			</p:toolbar>

			<p:dataTable id="dt-clientes" widgetVar="dtClientes" var="cl"
				value="#{cadastroClienteController.listaClientes}">
				<f:facet name="header">
					<div>
						<span style="font-weight: bold">Clientes</span>
					</div>
				</f:facet>

				<p:column headerText="Cliente" sortBy="#{cl.idCliente}">
					<h:outputText value="#{cl.idCliente}" />
				</p:column>
				<p:column filterBy="#{cl.nomeCliente}" headerText="Nome"
					filterMatchMode="contains">
					<h:outputText value="#{cl.nomeCliente}" />
				</p:column>
				<p:column headerText="Tipo Pessoa">
					<h:outputText value="#{cl.tpPessoa}" />
				</p:column>
				<p:column headerText="CPF/CNPJ">
					<h:outputText value="#{cl.cpfCnpj}" />
				</p:column>
				<p:column headerText="Telefone">
					<h:outputText value="#{cl.telefone}" />
				</p:column>
				<p:column headerText="E-mail">
					<h:outputText value="#{cl.email}" />
				</p:column>
				<p:column headerText="Logradouro">
					<h:outputText value="#{cl.logradouro}" />
				</p:column>
				<p:column headerText="Bairro">
					<h:outputText value="#{cl.bairro.nomeBairro}" />
				</p:column>
				<p:column headerText="Cidade">
					<h:outputText value="#{cl.bairro.cidade.nomeCidade}" />
				</p:column>
				<p:column headerText="Estado">
					<h:outputText value="#{cl.bairro.cidade.estado.nomeEstado}" />
				</p:column>

				<p:column>
					<!-- Cuidado com botões que usam AJAX -->
					<!-- process indica qual elemento do formulário será processado (padrão é todo o formulário), @this é só o próprio elemento -->
					<!-- update informa qual elemento será atualizado (renderizado novamente) ao finalizar ação -->
					<!-- é possível disparar ações para diversos eventos Javascript, deve-se cuidar a ordem da resolução dos mesmos -->
					<!-- como regra geral a prioridade de processamento é a seguinte (eventos on... - oncomplete, onclick, onblur, actionListener, action, oncomplete no final) -->
					<!-- PF é usado para chamada de função Javascript de algum elemento do Primefaces -->
					<p:commandButton icon="pi pi-pencil"
						update=":dialogs:cliente-conteudo-dialog"
						oncomplete="PF('clienteDialog').show()"
						action="#{cadastroClienteController.salvar}"
						styleClass="edit-button rounded-button ui-button-outlined"
						process="@this">
						<f:setPropertyActionListener value="#{cl}"
							target="#{cadastroClienteController.cliente}" />
						<p:resetInput target=":dialogs:cliente-conteudo-dialog" />
					</p:commandButton>
					<p:commandButton class="ui-button-raised rounded-button"
						icon="pi pi-trash" process="@this"
						oncomplete="PF('removerClienteDialog').show()">
						<f:setPropertyActionListener value="#{cl}"
							target="#{cadastroClienteController.cliente}" />
					</p:commandButton>
				</p:column>

			</p:dataTable>
		</h:form>

	</ui:define>
</ui:composition>
